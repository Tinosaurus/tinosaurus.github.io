<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tino Roivanen´s Homepage</title>
    <link>/</link>
    <description>Recent content on Tino Roivanen´s Homepage</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 11 Sep 2022 22:10:43 +0300</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The study diary!</title>
      <link>/studydiary/</link>
      <pubDate>Mon, 26 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>/studydiary/</guid>
      <description>Hi there! My name is Tino Roivanen, but online I like to go by multiple names, but most commonly Tinosaurus.
If the person evaluating this has questions, you can reach me through my email at t1roti00@students.oamk.fi
This is my study diary post for the Cloud Services Course, that I am taking in the University Of Applied Sciences in Oulu.
Please note; The marked date is the date that the page was last updated on.</description>
      <content>&lt;h1 id=&#34;hi-there&#34;&gt;Hi there!&lt;/h1&gt;
&lt;p&gt;My name is Tino Roivanen, but online I like to go by multiple names, but most commonly Tinosaurus.&lt;/p&gt;
&lt;p&gt;If the person evaluating this has questions, you can reach me through my email at &lt;a href=&#34;mailto:t1roti00@students.oamk.fi&#34;&gt;t1roti00@students.oamk.fi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is my study diary post for the Cloud Services Course, that I am taking in the University Of Applied Sciences in Oulu.&lt;/p&gt;
&lt;h1 id=&#34;please-note-the-marked-date-is-the-date-that-the-page-was-last-updated-on&#34;&gt;Please note; The marked date is the date that the page was last updated on.&lt;/h1&gt;
&lt;p&gt;This page will be updated on a weekly basis, answering the questions detailed on the course.
By hosting this page on GitHub Pages, im sure this will be ample enough done for Free choice extra task bundle E.
Link to a post detailing how the page is set up can be found &lt;a href=&#34;https://tinosaurus.github.io/posts/my-first-post/&#34;&gt;Here.&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;week-1-and-task-bundle-e&#34;&gt;Week 1 (And Task bundle E);&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Describe with short examples: SaaS, PaaS and IaaS&lt;/p&gt;
&lt;p&gt;SaaS, Or software as a Service is a model for software licensing that is served on a subscription basis, and is hosted for example, in the cloud.
These are usually accessed by a client, for example, web browser. A good example of these would be Dropbox, or other cloud storage services
where you pay an X amount of money per month, to have access to their provided cloud storage.&lt;/p&gt;
&lt;p&gt;PaaS, is Platform as a Service, where you buy a platform for creating software, instead of delivering the software itself online, like in SaaS. When you have the platform stored online
there is no need to worry about things such as operating systems, updates to software, among others. An example of PaaS would be Heroku, as it allows you
to deploy your application on their platform. But you do not own the infrastructure.&lt;/p&gt;
&lt;p&gt;IaaS, or Infrastructure as a Service is similar to the two above, but it&amp;rsquo;s for infrastructure, such as servers. This is the most flexible computing model, but also most resource heavy.
Examples of IaaS would be for example, Linode, Digitalocean, and many other hosting providers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;List and explain usual VPS advantages for small / start-up companies&lt;/p&gt;
&lt;p&gt;VPS hosting´s advantages include but are not limited to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Affordable compared to dedicated hosting. Dedicated hosting is way more expensive than an VPS.&lt;/li&gt;
&lt;li&gt;Enhanced security compared to shared hosting. It&amp;rsquo;s not as good as dedicated hosting, but it&amp;rsquo;s better than shared hosting.&lt;/li&gt;
&lt;li&gt;Flexibility, for example scaling better to a larger capacity, if the need occurs.&lt;/li&gt;
&lt;li&gt;Freedom, as in being able to run your own OS and software on the server, for example.&lt;/li&gt;
&lt;li&gt;Resource consistency, as in the server not being shared with other people in shared hosting manner.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Your thoughts about unexpected or hidden costs when using elastic cloud computing.&lt;/p&gt;
&lt;p&gt;The fact that you have flexible costs is a good thing in my opinion, because it allows you to pay only what you use for. It is good if your access credentials are well secured with 2-factor authentication among other things.
But if, for example your account gets breached, and your server starts gaining extra costs due to it being used unauthorized, using up more resources, or potentially having your data compromised, it will be an unpleasant surprise to
the owner of the server, and the users whose data is stored on the server.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;What is &amp;ldquo;shadow IT&amp;rdquo; and why it is causing significant troubles for many organisations and enterprises? Especially cloud shadow IT.&lt;/p&gt;
&lt;p&gt;Shadow IT is using systems, devices, software, etc. without explicit it-department approval. While shadow IT can improve productivity and innovate
it also has its troubles. Those including but not being limited to: data leak, security risks, possibility of malware. For example, running an unknown
piece of software could cause your infrastructure to be compromised. But on the other hand, not practicing shadow IT is restricting
employee freedom, due to the IT team not being aware of every possible application to ever exist. It&amp;rsquo;s always a trade-off of security VS employee productivity.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;week-2&#34;&gt;Week 2;&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://tinosaurus.github.io/posts/second-post/&#34;&gt;I also did build an autonomous Weather Post upon connecting to my raspberry pi, that i published a separate blog post of, to complete extra task bundle J, click here to access that blogpost.&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What is &lt;em&gt;serverless architecture&lt;/em&gt;?&lt;/p&gt;
&lt;p&gt;It is a method of software designing that allows developers to build, deploy and run applications without having to manage the servers themselves. Once a serverless application is deployed, it will respond to traffic and
scale accordingly. There can be a compute platform for just the code, data storage for data storage / retrieval, messaging services for moving the data from place A to place B etc. All of this with no management overhead and paying for only what you use.
For example, a REST API can be a serverless solution. For example; having AWS as your vendor, youd have an API gateway for HTTP requests, Lambda functions that receive requests and execute them, and having DynamoDB or some other database for data storage and retrieval.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Describe shortly what is Kubernetes and what alternatives are there?&lt;/p&gt;
&lt;p&gt;Kubernetes is a system for deployment, scaling, and management of application containers, also known as (CaaS) Container as a Service.
Kubernetes is good for managing and monitoring several simultaneously running containers, and kubernetes doesnt limit what type of application you have.
If you have a application that run in an container, Kubernetes can run it aswell. Kubernetes is also very portable, and scaleable for bigger applications,
but it can easily be overkill for smaller deployments.
Alternatives can include Azure Kubernetes Service, Google Cloud Run, AWS Fargate&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;If you would now use a virtualized Windows operating system in your laptop (whatever operating system the laptop already has): Which virtualization platform (VMware, Virtualbox, Hyper-V, KVM etc&amp;hellip;) would you use and why?&lt;/p&gt;
&lt;p&gt;My choice would be Oracle VM VirtualBox, due to the fact that I have earlier experience with the software, so im already somewhat familiar with it, also it is the best option
for my use needs, being able to use multiple operating systems as host (windows, mac &amp;amp; linux), ease of use and being free.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;List some benefits of IaC (Infrastructure as Code) for modern software development&lt;/p&gt;
&lt;p&gt;Its less risky making your infrastructure as code than having one person do them by hand, as if that person leaves, they could take all the knowledge of the systems with them.
Optimization also becomes very much easier when you can easier see what is causing troubles in your infrastructure, and you have better documentation with the code that has been developed by multiple people rather than
having entire infrastructure managed by one person.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;week-3&#34;&gt;Week 3;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Describe reasons why so many (most?) companies are using cloud based email and calendar services&lt;/p&gt;
&lt;p&gt;The reasons i can think of for this at least are improved security (having your confidential emails, and scheduled meetings and information about them in an highly protected location, off site), cloud based providers (ex. Microsoft, Google) have way higher amounts of resources to allocate to said services, theyre easier to access remotely from what device the employees want to, and from where they want to.
It also is a major simplification of administration, as the biggest back-end changes are not yours to worry of. And by relying on a cloud based provider for things such a redundancy, youll get higher uptime, and more backups across multiple diffrent locations.
Also if you have to increase or decrease your user counts, you have the increased scalability from a cloud-based solution at your disposal.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;List and explain some pros and cons (for example CDN challenges) of public DNS resolvers (Google&amp;rsquo;s 8.8.8.8, Cloudflare&amp;rsquo;s 1.1.1.1 etc.) vs common home networking, where end users are using ISP&amp;rsquo;s DNS resolvers?&lt;/p&gt;
&lt;p&gt;Public DNS can be notably more secure, for example keeping a No Logs policy (ex. 1.1.1.1 has logs for 24 hours, and afterwards they are purged.), or for example minimizing the data sent to servers to improve privacy.
As for cons, the biggest challenge being that CDN´s usually will not pick up your location that well when using a public DNS, they will think that you are in the vicinity of the
DNS server that you are using instead of locating your ISP´s DNS.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Describe reasons, why many IoT devices (internet connected home appliances, Smart-TVs and such) are using Google&amp;rsquo;s 8.8.8.8 or some other public DNS resolvers?&lt;/p&gt;
&lt;p&gt;They can be faster than your Local ISP´s DNS services, and they can also be more secure (see the mention of no logs from previous answer.) Also the fact that most IoT devices are not patchable by end user. While IoT (and every single other device for that matter) will always have vulnerabilities, by incorporating a DNS based solution, will help with threats such as DNS Cache Poisoning.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Your thoughts about when to maintain your own web server and when to use SaaS/PaaS/IaaS to provide web services?&lt;/p&gt;
&lt;p&gt;In my opinion, using your own webserver is not a bad idea for a smaller scale hobbyist project (For example, Raspberry PI´s are very great and power efficient servers for smaller server needs.) And of course, i wouldnt personally
host any larger or critical infrastructure on an self hosted webserver. But for smaller hobbyist projects, these work very well, as they can be very inexpensive and power efficient, and your home connection will be enough to host these services.
When the computational resources required starts to add up, or when the availability of service becomes more critical, id look into SaaS/PaaS/IaaS&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Below is my Free choice extra task bundle A terms explained using a few sentences for each term.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bare metal server: A physical computer server that is used by a single customer only. Each server is a distinct physical piece of hardware that is a fully functional server on its own. Bare metal servers are dedicated entirely to the entity who is renting them.&lt;/li&gt;
&lt;li&gt;Cloud Broker: A single point of entry to manage multiple cloud services. As cloud computing evolves, integration of cloud services might get too complex for consumers to manage alone, and that&amp;rsquo;s where Cloud Brokers are meant to help.&lt;/li&gt;
&lt;li&gt;Microservices: An application built as a collection of smaller services. This architecture enables rapid, frequent and reliable delivery of large and complex applications, and enables the technology stack to be evolved more easily.&lt;/li&gt;
&lt;li&gt;Elastic computing: Ability to scale the usage of resources (ex. cpu/memory/ram/storage/bandwidth) up and down to adapt to changing resource demands and meeting workload requirements dynamically.&lt;/li&gt;
&lt;li&gt;Cloud Federation: Deployment of both external and internal services to match business needs. Integrating private, community, and public clouds into scalable computing platforms.&lt;/li&gt;
&lt;li&gt;AWS Lambda: Serverless compute service that lets you run code for any type of application and/or backend service without managing or provisioning servers. Operates on a pay for what you use basis.&lt;/li&gt;
&lt;li&gt;FaaS: FaaS, also known as Function as Service, provides a platform to develop run and manage applications and their functionalities without building and maintaining the infrastructure typically associated with it. Building an app with this model is considered a way of &amp;ldquo;Serverless Architecture&amp;rdquo;&lt;/li&gt;
&lt;li&gt;DaaS: DaaS, also known as Desktop as a Service, is a computing offering where a service provides virtual desktops to end users over the internet, usually licensed with a per-user subscription format. These can be persistent desktops, ones that stay the same. Or non-persistent ones, that get wiped after every logout.&lt;/li&gt;
&lt;li&gt;SSO: SSO, also known as Single sign-on is an authentication method that allows a user to log in to several related, yet independent software systems with a single ID. This is used in for example, school networks. Where the same login will give you access to Wi-Fi, your courses, etc etc.&lt;/li&gt;
&lt;li&gt;Managed DNS: Managed DNS is a model of DNS where customer utilizes a DNS Server hosted by a service provider to store their DNS records and enables internet access with a domain name instead of just directly inserting an ip address.&lt;/li&gt;
&lt;li&gt;Origin Server: A computer running programs designed to listen and to respond to incoming requests and / or traffic.&lt;/li&gt;
&lt;li&gt;Google Firebase: A platform developed by google for mobile and web application creation. Useful for building apps, releasing and monitoring them, and monitoring user engagement within the app.&lt;/li&gt;
&lt;li&gt;LAMP:One of the most common software stacks of Linux, Apache, MySQL, and PHP/Perl/Python. It can also be used to refer a generic software stack model and its components can be changed.&lt;/li&gt;
&lt;li&gt;Mashup Service: A mashup is a webpage or an application that uses content from more than one source to create a single new service, basically combining multiple services together.&lt;/li&gt;
&lt;li&gt;Middleware: Middleware is described as &amp;ldquo;software glue&amp;rdquo;, being a software that provides services to software application beyond those available straight from the operating system.&lt;/li&gt;
&lt;li&gt;Ubiquitous Computing: A concept in software engineering, hardware and computer science where computing is made to appear anytime and everywhere. It&amp;rsquo;s the concept of using small internet connected and inexpensive computers to help with everyday functions.&lt;/li&gt;
&lt;li&gt;SLA: SLA also known as Service-level agreement is a commitment between a service provider and a client. Aspects of the commitment (ex. quality, availability, etc.) are agreed between the provider and the user.&lt;/li&gt;
&lt;li&gt;TCO:TCO, an acronym for Total cost of ownership, is a financial estimate intended to help buyers and owners determine the direct and also indirect costs of a product and / or service.&lt;/li&gt;
&lt;li&gt;Vendor Lock-in: The act of making customer dependent on a certain vendor for products, unable to use another vendors without substantial switching costs. For example: proprietary connectors are a method of vendor lock-in.&lt;/li&gt;
&lt;li&gt;Utility Computing: A service provisioning model where a service provider makes resources and infrastructure management available as needed and charges for specific usage rather than a flat rate.&lt;/li&gt;
&lt;li&gt;Fog Computing(Fogging): An architecture that has edge devices carrying out a substantial amount of computation storage and communication locally and routed over the internet.&lt;/li&gt;
&lt;li&gt;Network Slicing: Overlaying multiple virtual networks on top of a shared network domain. Often used in 5G networks as a fundamental capability.&lt;/li&gt;
&lt;li&gt;Websocket: A communications protocol providing communication channels over a single TCP connection. Enables interaction between a client application and a server with lower overhead than alternatives such as HTTP polling.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;week-4&#34;&gt;Week 4&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Below is my answers for the week 4 questions, and the extra task bundle B.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;If you could change one of your home or work appliances/devices to an internet connected device, what would it be? Which cloud IoT services would you like to use for it (and why)?&lt;/p&gt;
&lt;p&gt;I would pick my lights. Because if I forget them on, I could turn them off when im not home from an app on my phone for example.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Estimate how much would it cost to run your own gaming PC instance in the Azure cloud as DaaS/VDI&lt;/p&gt;
&lt;p&gt;Based on an VM in South Sweden, with 8 cores, 16gb ram, 80gb of temporary storage, and accounting for an 2048GiB HDD, and 2tb of outbound data transfer, the monthly cost would be 890.20€, this is probably way overkill, as this is set for 24/7 operation for the entire month.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Your thoughts or examples of cloud based on-demand gaming and streaming&lt;/p&gt;
&lt;p&gt;This can be a good thing, for example for people with a high bandwidth speed, and lower end devices. These cloud services also tend to have bigger libraries, and paying a monthly fee for a larger library might seem as a compelling business model for some users.
But for people with slower bandwidth speeds, or people with already a functioning gaming pc, this will not seem as useful. Overall, cloud gaming DOES have a valid reason for its share in the market.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Search and describe examples of CAP theorem in cloud services context&lt;/p&gt;
&lt;p&gt;CAP theorem is the theory that any data storage can provide only two of the following three guarantees:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Consistency&lt;/li&gt;
&lt;li&gt;Availability&lt;/li&gt;
&lt;li&gt;Partition tolerance&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When a network failure happens it must be decided whether to cancel the active transfer and thus decrease the availability to ensure consistency, or to
proceed with the operation, and be more available but risk inconsistency.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Listed below there are answers for my free choice extra task bundle B&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;What to consider and compare when choosing a VPS server provider and VPS server features:&lt;/p&gt;
&lt;p&gt;What are your special needs, for example. RAM, Storage, Fast storage, What will you use it for, and the location of the server.
Other highly suggested factors to think of can be but are not limited to; Uptime (A good measurement for the reliability of your hosting provider), How are their backups handled, what kind of network connections they offer, what security features they do have in use,&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The benefits, risks and challenges of hybrid cloud computing.&lt;/p&gt;
&lt;p&gt;Starting with the benefits, hybrid cloud gives you better and more robust security options for data with increased security needs,
more control over your data, and clear separation of private and public cloud services. Hybrid Cloud helps you also have better network management by locating data closer to the user of the data.&lt;/p&gt;
&lt;p&gt;The biggest cons/risks/challenges for cloud computing are the complexity of hybrid cloud. Current IT solutions need to be positioned correctly for the present and the future.
Budget can be also a big factor, because of other urgent business needs. And by increasing the complexity of your IT solution, there will be an increased risk of security attacks towards your IT solution.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Why HTTP/2 (and HTTP/3) will/may speed-up many web based cloud services? What is the current HTTP/2 adaptation rate now?&lt;/p&gt;
&lt;p&gt;HTTP/2 is faster than its predecessors by using a single connection to transmit everything, it prioritizes things for more efficiency, and its more secure as its not in plaintext, it reduces load times by an considerable amount, and it is more compatible than previous versions.
HTTP/3 on the other hand is being worked on, considered relatively mature, but its still safe to say it still is in an experimental state. This can be mostly reflected by the fact that the amount of requests that use HTTP/3 is less than 2%, compared to HTTP/2&amp;rsquo;s 64 - 66 % (depending on desktop or mobile.)
Biggest features of HTTP/3 will be faster initial setups on connections, and better flexibility, and better reliability with spotty connections (ex. variable amounts of packet loss)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;What is (5G) mobile edge computing? How it may change IoT and mobile device use?&lt;/p&gt;
&lt;p&gt;Edge computing takes place at or near users physical location. By placing the computational services closer to the users physical location, users benefit from faster and more reliable services
while companies benefit from being able to support latency-sensitive applications better. The biggest diffrence to IoT is that edge devices are phsyical hardware in remote locations, to collect, process and execute upon it.
IoT devices on the other hand, are the source of said data. Edge devices can be considered IoT if they have enough storage and compute to make low latency decisions and processing of said data.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;week-5&#34;&gt;Week 5&lt;/h1&gt;
&lt;p&gt;Week 5&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Describe pros and cons of cloud WAF´S&lt;/p&gt;
&lt;p&gt;A Web Application Firewall acts as a firewall between a web application and the internet. These can be used to protect a web application from malicious content such as sql injections, cross site scripting (xss) and many others. WAF’S biggest pros are the safety they provide, at a minimal upfront cost. The biggest con is that you hand over the responsibility of organizing it to a third party.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;List and describe (with tiny examples) some commonly used data formatting standards, markup languages and syntaxes used to store or request data via cloud service APIs.&lt;/p&gt;
&lt;p&gt;Commonly used data formatting standards are for example Extensive Markup Language (XML), that was designed as a self-descriptive markup language to store and transport data,&lt;/p&gt;
&lt;p&gt;JavaScript Object Notation (JSON), Javascript based data-interchange format, and can be language independent.&amp;gt;&lt;/p&gt;
&lt;p&gt;Comma Stored Value(CSV) is a file format used to save table based data, such as Excel spreadsheets, that can be used to move big amounts of data.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;List and describe shortly different open source or commercial internet networking (peer-to-peer) solutions where multiple hosts can share the host network connection(s) and other resources&lt;/p&gt;
&lt;p&gt;For example, Windows Update (in Windows 10 at least) can be delivered with a Peer-to-peer connection based network. Biggest examples of peer-to-peer data transfer might be torrent sharing, (NOTE; Actual usage of torrent networks is legal, it is just the copyrighted content that is not legal.) And even some communication networks are built on peer-to-peer technology, such as Session, Tox, or Orbit.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Your startup company has developed a popular Android application and offers web based OAuth/SAML via 3rd party auth provider and locally generated user accounts (local accounts are in your own VPS) - Explain some pros and cons of both methods&lt;/p&gt;
&lt;p&gt;Well, to start the pro’s of the OAuth based solution is that the implementation is less expensive for this solution, and it is communicating to an external backend, (google,facebook etc..) and the fact that if your frontend gets compromised, your backend security is fine. With the biggest con being that you have to trust your userdata to a third party.&lt;/p&gt;
&lt;p&gt;On local accounts, you have control of all data, but all the security, upkeeping costs, and if your frontend is compromised, they might also recieve access to your backend services as well.&lt;/p&gt;
&lt;p&gt;As a final conclusion, both have their Pro´s and Con´s, BUT if executed well, both can be good to use as the login method.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Final Conclusion:&lt;/p&gt;
&lt;p&gt;Tasks done: Weeks 1-5, and Bundles A, B, E, and J&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    </item>
    
    <item>
      <title>Using a cloud service API for something meanful.</title>
      <link>/posts/second-post/</link>
      <pubDate>Sun, 11 Sep 2022 22:10:43 +0300</pubDate>
      
      <guid>/posts/second-post/</guid>
      <description>This wasnt a big scale project by any means, but this is something that i found useful for myself. This project featured me using wttr.in to check the weather with a console orientated service. I configured it to print out the local weather for the 3 following days, at 4 diffrent times (Morning, Noon, Evening and Night)
Usage is simple(ish):
Use either curl, on linux based systems, or Invoke-RestMethod in PowerShell on windows as a base for all the commands.</description>
      <content>&lt;p&gt;This wasnt a big scale project by any means, but this is something that i found useful for myself. This project featured me
using &lt;a href=&#34;https://github.com/chubin/wttr.in&#34;&gt;wttr.in&lt;/a&gt; to check the weather with a console orientated service. I configured it to print out the local weather for the 3 following days, at 4 diffrent times (Morning, Noon, Evening and Night)&lt;/p&gt;
&lt;p&gt;Usage is simple(ish):&lt;/p&gt;
&lt;p&gt;Use either curl, on linux based systems, or Invoke-RestMethod in PowerShell on windows as a base for all the commands.&lt;/p&gt;
&lt;p&gt;Using&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;curl &lt;a href=&#34;https://wttr.in&#34;&gt;https://wttr.in&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Will print the data based on your IP-Adresses geolocational data.&lt;/p&gt;
&lt;p&gt;But, what if you use a VPN for example, to mask your geolocational data?&lt;/p&gt;
&lt;p&gt;Well, no problem. You can add the desired url to the end of your location. For example;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;curl &lt;a href=&#34;https://wttr.in/Helsinki&#34;&gt;https://wttr.in/Helsinki&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It also works on other location types, such as:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;City Names&lt;/li&gt;
&lt;li&gt;Airport Codes&lt;/li&gt;
&lt;li&gt;Area Codes&lt;/li&gt;
&lt;li&gt;GPS Coordinates&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;The returned calls are largely customizeable, with things such as:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Weather Units&lt;/li&gt;
&lt;li&gt;Diffrent output formats (print a .png file for example)&lt;/li&gt;
&lt;li&gt;Print only one line of data&lt;/li&gt;
&lt;li&gt;Data-rich output format (Seems to have an limited amount of api calls)&lt;/li&gt;
&lt;li&gt;Moon phases and others, such as time of sunset and sunrise with a customizeable output.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;So for example: The custom Output i  made looks like this (I have scrapped the location, as this is going to be public on the internet afterall.);&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/ePd1nv0.png&#34; alt=&#34;The ready console print&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Mon, 05 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>This is a placeholder text. Text coming soon, once i finish translating the necossary things i want to add here.</description>
      <content>&lt;h1 id=&#34;this-is-a-placeholder-text&#34;&gt;This is a placeholder text.&lt;/h1&gt;
&lt;p&gt;Text coming soon, once i finish translating the necossary things i want to add here.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>My first post! A writedown of how this page came to be.</title>
      <link>/posts/my-first-post/</link>
      <pubDate>Tue, 30 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/my-first-post/</guid>
      <description>A short story on how i setup this website. I found this hugo theme after i got tired of my plain old website,and i wanted a challenge. So i started googling for some better solutions. Then i ended up on finding this framework for building websites called Hugo. and it looked robust enough, and easy enough to setup as a total newbie to webpage building. After looking around the hugo themes section, i found the perfect setup.</description>
      <content>&lt;h1 id=&#34;a-short-story-on-how-i-setup-this-website&#34;&gt;A short story on how i setup this website.&lt;/h1&gt;
&lt;p&gt;I found this hugo theme after i got tired of my plain old website,and i wanted a challenge. So i started googling for some better solutions.
Then i ended up on finding this framework for building websites called &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo.&lt;/a&gt; and it looked robust enough,
and easy enough to setup as a total newbie to webpage building. After looking around the hugo themes section, i found the perfect setup.
A lovely theme called &lt;a href=&#34;https://github.com/panr/hugo-theme-terminal&#34;&gt;Terminal by panr&lt;/a&gt;, and it looked really nice to my eye. So i started on my journey
to making my page with hugo. As in why this theme stood out to me, the pre-bundled themes did look really good in my eye. And hey, i love the color pink,
but theres also more color options.&lt;/p&gt;
&lt;p&gt;First thing that i needed to do, was to search for Hugo´s &lt;a href=&#34;https://gohugo.io/getting-started/quick-start/&#34;&gt;Quick start guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The first thing that i did, was install hugo´s extended version. Using a packagemanager called &lt;a href=&#34;https://scoop.sh/&#34;&gt;Scoop&lt;/a&gt;, it was easy as typing&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;scoop install hugo-extended&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;into the command prompt after having installed scoop in the first place.&lt;/p&gt;
&lt;p&gt;Then i generated a new site using&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;hugo new site quickstart&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And then i added the presupplied configuration file found on the github site of the terminal theme (linked above) with the terminal theme, into &lt;strong&gt;config.toml&lt;/strong&gt; file in the hugo root directory.&lt;/p&gt;
&lt;p&gt;Then i added the first blogpost with using&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;hugo new posts/file-name-here.md&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And editing the new file, that was generated in the posts folder. As the .md extension implies, the site uses &lt;a href=&#34;https://en.wikipedia.org/wiki/Markdown&#34;&gt;Markdown technology.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The markdown syntax is still something new that im learning. So these blog posts might look prettier, some day i hope.&lt;/p&gt;
&lt;p&gt;at this point, i started the local envivorment by running&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;hugo server -d&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;in the command prompt, while being in the server root folder.&lt;/p&gt;
&lt;p&gt;That launched a local development server, that will autoupdate (a really nice feature.) into localhost:1313 by default.&lt;/p&gt;
&lt;p&gt;Once i had done the changes i wanted, i navigated to the root folder, and specified where hugo will build the static pages, by using&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;hugo -D folder/path/here&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And then i deployed this using the &lt;a href=&#34;https://pages.github.com/&#34;&gt;Github pages&lt;/a&gt; tutorial.&lt;/p&gt;
&lt;p&gt;Overall, this was a dive into something new, that i enjoyed doing.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Showcase</title>
      <link>/showcase/</link>
      <pubDate>Tue, 30 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>/showcase/</guid>
      <description>There will be things here. Later. Like keyboards and such. And whatever i do. Wacky stuff. </description>
      <content>&lt;h2 id=&#34;there-will-be-things-here-later-like-keyboards-and-such-and-whatever-i-do-wacky-stuff&#34;&gt;There will be things here. Later. Like keyboards and such. And whatever i do. Wacky stuff.&lt;/h2&gt;
</content>
    </item>
    
  </channel>
</rss>
